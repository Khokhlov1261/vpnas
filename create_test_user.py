#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import os
import sys
import psycopg2
from datetime import datetime, timezone, timedelta
import jwt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DATABASE_URL = "postgresql://alexanderkhokhlov@localhost/securelink"
JWT_SECRET = "dev-secret-key-change-in-production"

def create_test_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("""
            INSERT INTO users (telegram_id, username, first_name, last_name, language_code, last_login)
            VALUES (%s, %s, %s, %s, %s, %s)
            ON CONFLICT (telegram_id) DO UPDATE SET
                username = EXCLUDED.username,
                first_name = EXCLUDED.first_name,
                last_name = EXCLUDED.last_name,
                last_login = EXCLUDED.last_login
            RETURNING id
        """, (123456789, "testuser", "Test", "User", "ru", datetime.now(timezone.utc).isoformat()))
        
        user_id = cursor.fetchone()[0]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
        cursor.execute("""
            INSERT INTO orders (user_id, telegram_id, email, plan, price, status, created_at, expires_at)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
            RETURNING id
        """, (
            user_id, 
            123456789, 
            "test@example.com", 
            "1 –º–µ—Å—è—Ü", 
            99.0, 
            "paid", 
            datetime.now(timezone.utc).isoformat(),
            (datetime.now(timezone.utc) + timedelta(days=30)).isoformat()
        ))
        
        order_id = cursor.fetchone()[0]
        
        # –°–æ–∑–¥–∞–µ–º JWT —Ç–æ–∫–µ–Ω
        now = datetime.now(timezone.utc)
        expires_at = now + timedelta(hours=24 * 7)  # 7 –¥–Ω–µ–π
        
        payload = {
            'user_id': user_id,
            'iat': now,
            'exp': expires_at,
            'type': 'access_token'
        }
        
        token = jwt.encode(payload, JWT_SECRET, algorithm="HS256")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
        cursor.execute("""
            INSERT INTO user_sessions (user_id, session_token, expires_at)
            VALUES (%s, %s, %s)
        """, (user_id, token, expires_at))
        
        conn.commit()
        conn.close()
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω!")
        print(f"üìß Email: test@example.com")
        print(f"üÜî User ID: {user_id}")
        print(f"üîë JWT Token: {token}")
        print(f"üì± Telegram ID: 123456789")
        print(f"üë§ Username: @testuser")
        print(f"üìã Order ID: {order_id}")
        print()
        print("üåê –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print(f"curl -H 'Authorization: Bearer {token}' http://localhost:8000/auth/me")
        print()
        print("üîó –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)")
        print("2. –í Console –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print(f"   localStorage.setItem('authToken', '{token}')")
        print("3. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É /dashboard")
        
        return token
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return None

if __name__ == "__main__":
    create_test_user()
